version: '3'

services:


  # redis:
  #   image: redis
  #   ports:
  #     - '6379:6379'
  #   networks:
  #     - my_network

  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'TimekeepingExnodes'
      MYSQL_USER: 'gkayz'
      MYSQL_PASSWORD: '123456789'
      MYSQL_ROOT_PASSWORD: '123456789'
    ports:
      - '3307:3306'
    networks:
      - my_network
    command: --bind-address=0.0.0.0

  web:
    build: .
    volumes:
      - ./:/usr/src/app/
    image: work_log.cms:latest
    container_name: work_log
    ports:
      - 8000:8000
      - 6969:6969
    env_file:
      - ./.env.dev
    networks:
      - my_network
    # command: >
    #   bash -c "python manage.py migrate &&
    #   python manage.py rqworker &
    #   python manage.py rqscheduler &
    #   python manage.py runserver 0.0.0.0:8000"

networks:
  my_network:
    driver: bridge


  
  # celery_worker:
  #   build: .
  #   command: celery -A WorkLog worker --loglevel=info
  #   volumes:
  #     - ./:/usr/src/app/
  #   env_file:
  #     - ./.env.dev
  #   depends_on:
  #     - redis
  #     - web
  #     - redis
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #   networks:
  #     - my_network

  # celery_beat:
  #   build: .
  #   command: celery -A WorkLog beat --loglevel=info
  #   volumes:
  #     - ./:/usr/src/app/
  #   env_file:
  #     - ./.env.dev
  #   depends_on:
  #     - redis
  #     - web
  #     - redis
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #   networks:
  #     - my_network

  
    

    
    

  # nginx:
  #   build: ./nginx
  #   volumes:
  #     - ./:/usr/src/app/
  #   image: services.nginx:latest
  #   container_name: nginx_vape
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - web
